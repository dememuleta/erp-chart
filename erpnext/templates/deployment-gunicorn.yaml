apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "erpnext.fullname" . }}-gunicorn
  labels:
    {{- include "erpnext.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.worker.gunicorn.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "erpnext.name" . }}-gunicorn
      app.kubernetes.io/instance: {{ .Release.Name }}-gunicorn
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "erpnext.name" . }}-gunicorn
        app.kubernetes.io/instance: {{ .Release.Name }}-gunicorn
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "erpnext.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: volume-permissions
          image: busybox
          command: ["sh", "-c", "chown -R 1000:1000 /home/frappe/frappe-bench"]
          volumeMounts:
            - name: sites-dir
              mountPath: /home/frappe/frappe-bench/sites
            - name: apps-dir
              mountPath: /home/frappe/frappe-bench/apps
        - name: init-frappe
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: ["/bin/bash", "-c"]
          args:
            - |
              if [ ! -d /home/frappe/frappe-bench/apps/frappe ]; then
                bench init --ignore-exist --skip-redis-config-generation frappe-bench
                cd frappe-bench
                bench get-app https://github.com/frappe/frappe --branch {{ .Values.worker.gunicorn.initFrappe.branch | default "version-15" }}
                bench get-app https://github.com/frappe/erpnext --branch {{ .Values.worker.gunicorn.initFrappe.branch | default "version-15" }}
              fi
          volumeMounts:
            - name: sites-dir
              mountPath: /home/frappe/frappe-bench/sites
            - name: apps-dir
              mountPath: /home/frappe/frappe-bench/apps
        {{- if .Values.worker.gunicorn.initContainers }}
        {{- toYaml .Values.worker.gunicorn.initContainers | nindent 8 }}
        {{- end }}
      containers:
        - name: gunicorn
          env:
            - name: PYTHONPATH
              value: /home/frappe/frappe-bench/apps
            - name: FRAPPE_APP_PATH
              value: /home/frappe/frappe-bench/apps/frappe
          {{- if .Values.worker.gunicorn.envVars }}
            {{- toYaml .Values.worker.gunicorn.envVars | nindent 12 }}
          {{- end }}
          args:
            {{- toYaml .Values.worker.gunicorn.args | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: sites-dir
            mountPath: /home/frappe/frappe-bench/sites
          - name: apps-dir
            mountPath: /home/frappe/frappe-bench/apps
          - name: logs
            mountPath: /home/frappe/frappe-bench/logs
          ports:
            - name: http
              containerPort: {{ .Values.worker.gunicorn.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.worker.gunicorn.livenessProbe | nindent 12 }}
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - test -f /home/frappe/frappe-bench/apps/frappe/frappe/__init__.py
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.worker.gunicorn.resources | nindent 12 }}
      {{- if .Values.worker.gunicorn.sidecars }}
        {{- toYaml .Values.worker.gunicorn.sidecars | nindent 8 }}
      {{- end }}
      volumes:
        - name: sites-dir
          {{- if .Values.persistence.worker.enabled }}
          persistentVolumeClaim:
            {{- if .Values.persistence.worker.existingClaim }}
            claimName: {{ .Values.persistence.worker.existingClaim }}
            {{- else }}
            claimName: {{ template "erpnext.fullname" . }}
            {{- end }}
            readOnly: false
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: apps-dir
          {{- if .Values.persistence.apps.enabled }}
          persistentVolumeClaim:
            {{- if .Values.persistence.apps.existingClaim }}
            claimName: {{ .Values.persistence.apps.existingClaim }}
            {{- else }}
            claimName: {{ template "erpnext.fullname" . }}-apps
            {{- end }}
            readOnly: false
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: logs
          {{- if .Values.persistence.logs.enabled }}
          persistentVolumeClaim:
            {{- if .Values.persistence.logs.existingClaim }}
            claimName: {{ .Values.persistence.logs.existingClaim }}
            {{- else }}
            claimName: {{ template "erpnext.fullname" . }}-logs
            {{- end }}
            readOnly: false
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- with .Values.worker.gunicorn.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.worker.gunicorn.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.worker.gunicorn.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}